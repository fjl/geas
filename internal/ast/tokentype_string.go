// Code generated by "stringer -linecomment -type tokenType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[eof-0]
	_ = x[lineStart-1]
	_ = x[lineEnd-2]
	_ = x[invalidToken-3]
	_ = x[identifier-4]
	_ = x[dottedIdentifier-5]
	_ = x[variableIdentifier-6]
	_ = x[labelRef-7]
	_ = x[dottedLabelRef-8]
	_ = x[label-9]
	_ = x[dottedLabel-10]
	_ = x[numberLiteral-11]
	_ = x[stringLiteral-12]
	_ = x[openParen-13]
	_ = x[closeParen-14]
	_ = x[comma-15]
	_ = x[directive-16]
	_ = x[instMacroIdent-17]
	_ = x[openBrace-18]
	_ = x[closeBrace-19]
	_ = x[equals-20]
	_ = x[arith-21]
}

const _tokenType_name = "end of filebeginning of lineend of lineinvalid characteridentifierdotted identifierparameter referencelabel referencedotted label referencelabel definitiondotted label definitionnumber literalstring literalopen parenthesisclose parenthesiscommadirectivemacro identifieropen braceclosing braceequals signarithmetic operation"

var _tokenType_index = [...]uint16{0, 11, 28, 39, 56, 66, 83, 102, 117, 139, 155, 178, 192, 206, 222, 239, 244, 253, 269, 279, 292, 303, 323}

func (i tokenType) String() string {
	if i >= tokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
